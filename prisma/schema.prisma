// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  email  String?
  phone  String?
  answer Answer[]

  @@map("users")
}

model Question {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  text         String
  courseWeight CourseWeight[]
  answer       Answer[]

  @@map("questions")
}

model Course {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  text         String
  courseWeight CourseWeight[]

  @@map("courses")
}

model CourseWeight {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  weight     Float
  course     Course   @relation(fields: [courseId], references: [id])
  courseId   String   @map("course_id") @db.ObjectId
  question   Question @relation(fields: [questionId], references: [id])
  questionId String   @map("question_id") @db.ObjectId

  @@map("course_wights")
}

model Answer {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  value      Int
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String   @map("user_id") @db.ObjectId
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId String   @map("question_id") @db.ObjectId

  @@map("answers")
}
